# -*- mode: shell-script -*-
#!/bin/bash

# show status of all repos under "$1" (deafults to "~/git")
function gitstat () {
    if [ -z "$1" ]; then
        base=~/git;
    else
        base=$1;
    fi;
    for d in $base/* ; do
        echo -n `basename $d`;
        echo -n " ";
        ( cd $d;
          stat=$(git status);
          branch=$(echo $stat | grep -Eo "On branch .*$" | cut -f3 -d" ");
          [ -z "$branch" ] && \
              branch=$(echo $stat | \
                              grep -Eo "HEAD detached|Not currently on any" | \
                              echo "!");
          [ -z "$branch" ] && branch="()";
              uptodate=$($(echo $stat | grep -q "is behind") && echo "!");
          [ -z "$uptodate" ] && \
              uptodate=$($(echo $stat | grep -q "is ahead") && echo "*");
          [ -z "$uptodate" ] && \
              uptodate=$($(echo $stat | grep -q "diverged") && echo "<");
          [ -z "$uptodate" ] && \
              uptodate=$($(echo $stat | grep -Eq "Change|Untrac") && echo "#");
          echo -n $branch;
          echo -n "  ";
          echo -n "("$uptodate")";
          echo -n "  ";
          echo $(2>/dev/null git describe --tags HEAD) );
    done | column -t
}

# update all remotes for all repos under "$1" (defaults to "~/git")
function gitupd() {
    if [ -z "$1" ]; then
        base=~/git
    else
        base=$1
    fi
    for d in $base/*
    do
        echo `basename $d`
        (
            cd $d
            git fetch --prune 1> /dev/null
        )
    done
}

