#!/bin/bash

skip(){
    for a in `cd $TMP/lib ; echo $1` ;do
        echo "disabling $a"
        touch $TMP/lib/$a/SKIP
    done
}

usage(){
    echo "usage: kotp [--delete_src] [--delete_dest] [--install] release]"
}

prefix="/usr/local/lib/erlang"
while [ "$1" != "" ]; do
    case "$1" in
        "--delete_src")
            keep_src="no";;
        "--delete_dest")
            keep_dest="no"
            install="yes";;
        "--prefix")
            prefix="$2"; shift;;
        "--install")
            install="yes";;
        *)
            release="$1";;
    esac
    shift
done

[ -z "$relese" ] && usage

SVN=https://svn.hq.kred/repos/kreditor/otp/branches/$release
DOCZ=otp_doc_html_`echo $release|egrep -o "R[0-9]+B([0-9]|-)[0-9]+"`.tar.gz
TMP=/tmp/otp/$release

# blow away old stuff
if [ "$keep_src" == "no" ]; then
    [ -d $TMP ] && rm -rf $TMP
fi

# get new stuff
if [ ! -d $TMP ]; then 
    svn co $SVN
fi

# skip some crap
skip "webtool tv toolbar test_server pman percept orber \
          odbc observer megaco jinterface inviso gs et cos* common_test appmon"

#configure
(cd $TMP ; ./configure --prefix=$prefix)

# update (configure messes with the SKIP files...)
svn up $TMP

# make
make -C $TMP

# these are needed for the build, but we don't want to install them
skip ic otp_mibs snmp

# maybe blow away old stuff
if [ "$keep_dest" == "no" ]; then
    sudo rm -rf $prefix
fi

# maybe install
if [ "$install" == "yes" ]; then
    # the libs
    sudo make -C $TMP install
    # the docs
    wget http://www.erlang.org/download/$DOCZ
    sudo tar -xzf $DOCZ -C $prefix
    rm $DOCZ
fi
