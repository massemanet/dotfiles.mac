#!/bin/bash

echo_exit(){
    echo "$1"
    exit
}

export IGNORE_FORCE_BACKUP=true
ROLE=master
UPDB=""
INIT=""

while [ -n "$1" ] 
  do
  case "$1" in
      "-master");;
      "-slave") ROLE=slave;;
      "-init")  UPDB=true ; INIT=${2:-local}; shift;;
      "-updb")  UPDB=true;;
      "-site")  SITE_NAME=$2; shift;;
      *) echo_exit "unknown flag: $1"
  esac
  shift
done

if [ ! -f system/node.txt -o ! -f system/sys.config ]; then
    INIT=${INIT:-true}
fi

if [ "$INIT" != "" ]; then
    if [ "$INIT" == "rsync" ]; then
        echo "init from $INIT"
	bin/kred -dbc_unpack rsync
        echo "recover"
        bin/kred -recover
    elif [ "$INIT" == "legacy" ]; then
        echo "init with empty db w/o vip's"
        if [ ! -f ~/.kredinit -o ! -f /etc/kredlive.conf ]; then
            echo "creating kred config files"
            bin/mk_dev_system
        fi
        bin/kred -n $ROLE
    elif [ -f "$INIT" ]; then
        echo "init from $INIT"
	export DBC_TGZ=$INIT
	export DBC_RELATIVE_DIR="yes"
	bin/kred -dbc_unpack
        echo "recover"
        bin/kred -recover
    else
        echo "init with empty db and vip's ($INIT)"
        bin/kred -n $ROLE $INIT
    fi
fi

if [ "$UPDB" != "" ]; then
    echo "updating"
    bin/kred -updb
fi

if [ -d /mnt/kred_kfile ]; then
    [ -d system/kfile ] && rm -rf system/kfile
    ln -s /mnt/kred_kfile system/kfile
fi

echo starting

if grep -q no_cron bin/kred  ; then
    bin/kred -no_cron -no_ctrlc -i -force $ROLE
else
    bin/kred  -i -force $ROLE
fi
